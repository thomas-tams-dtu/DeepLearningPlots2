"0","dense_data_avg_test <- dense_data |>"
"0","  mutate(test_avg = unlist(map(.x = test_loss,"
"0","                               .f = ~mean(unlist(.x)))),"
"0","         .after = train_min)"
"0",""
"0","lowest_avg_test_dense <- dense_data_avg_test |>"
"0","  pull(test_avg) |>"
"0","  min()"
"0",""
"0",""
"0","color_vector <- c("
"0","  ""#69BD44"","
"0","  ""#5154A5"", ""#5154A5"","
"0","  ""#41B6E8"", ""#41B6E8"","
"0","  ""#FCE349"", ""#FCE349"", ""#FCE349"","
"0","  ""red"", ""red"", ""red"", ""red"", ""red"", ""red"","
"0","  ""grey"", ""grey"""
"0",")"
"0",""
"0","test_p_d <- dense_data_avg_test |>"
"0","  ggplot(aes(x = learning_rate, y = weight_decay, fill = test_avg)) +"
"0","  geom_tile() +"
"0","  scale_fill_gradientn(colours=color_vector,"
"0","                       na.value = ""grey"","
"0","                       breaks=c(lowest_avg_test_dense, 0.26, 0.31, 0.39, 0.56),"
"0","                       limits=c(lowest_avg_test_dense, 0.6),"
"0","                       labels = scales::label_number(accuracy = 0.01)) +"
"0","  facet_wrap(~network_size) +"
"0","  theme_minimal() +"
"0","  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +"
"0","  labs(title = 'Dense network performance',"
"0","       subtitle = 'Trained on gtex data',"
"0","       fill = test_fill_text,"
"0","       x = 'Learning rate',"
"0","       y = 'Weight decay')"
"0",""
"0","test_p_d"
